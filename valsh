#!/usr/bin/env bash

shdir=/apps/ezid/apps/apache/ezid-shoulders
shdb=$shdir/master_shoulders.txt

me=$( basename $0 )
function usage {
	cat << EOT

SYNOPSIS                          ($0)
    $me - validate shoulders

USAGE
    $me Shoulder ...

DESCRIPTION

This script does an operational test (it actually mints and uses up an id)
to validate each given Shoulder in either of these forms

    ark:/NNNNN/X
    doi:10.N[...]/X

Each Shoulder must be listed in the shoulder database,

    $shdb

If a Shoulder is specified as "-", only a simple database syntax check is
performed (no ids are minted).

EXAMPLE

    $me ark:/12345/x4 doi:10.12345/x5

EOT
}

function valsh {

	local shoulder=$1
	[[ "$shoulder" ]] || {	
		echo "ERROR: no shoulder specified"
		return $?
	}
	$shdir/validate-shoulders $shdb -m "ezid:$eziduserpw" "$shoulder" ||
		return 1
	echo "$shoulder - OK"
	return 0
}

# copied from ~/.bashrc
function eggnogpw {
    # Echoes the eggnog password (this assumes that the binder and
    # minter passwords are the same).
    local f=/apps/ezid/apps/apache/ezid/SITE/PROJECT/settings/ezid.conf.shadow
    local pw=$(sed -n '/binder/,/password/p' $f | grep '^password: ')
    if [ "$pw" == "" ]; then
        echo "ERROR: failed to locate eggnog password"
    else
        echo "${pw#*: }"
    fi
}

eziduserpw=$( eggnogpw )
errcnt=0

[[ "$1" ]] || {
	usage
	exit
}

$shdir/validate-shoulders $shdb	||	# if "-" do basic db syntax check
	exit 1

[[ "$1" == "-" ]] &&		# syntax check was all that user wanted
	exit 0

for s in "$@"
do
	valsh "$s" ||		# operational check on a given shoulder
		(( errcnt+=1 ))
done

[[ $errcnt -gt 0 ]] && {
	exit 1
}
exit 0
