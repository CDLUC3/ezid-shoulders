#!/bin/tcsh -f

if ($# < 2) then
	echo "Usage:   $0 Acronym Website InstitutionName First Last Email Phone"
	echo "Example:"
	echo ""
	echo "    $ $0" 'OU http://ou.example.org "Oaksterdam University"'
	echo "    98765: OU        2010.04.09   # Oaksterdam University"
	echo ""
	echo "which you copy onto the end of the 'grandfathered' file."
	echo "It also puts out a stub NAA record for the NAAN registry."
	echo "Don't forget to update the date of the NAAN registry file."
	echo ""
	echo 'To unmint a NAAN (22222), use "nog -d ~/minters/n2t/naans queue now 22222".'
	exit 1
endif

set notify = (jak@ucop.edu)

set acro = "$1"
set website = "$2"
#set institution = ($3 $4 $5 $6 $7 $8 $9)
set institution = "$3"
set first = "$4"
set last = "$5"
set email = "$6"
set phone = "$7"

#set ndcmd = /noid/nd/noid
#set ndcmd = nog
# xxx for AWS conversion, mint and toss first 233 spings with
#     nog -d ~/minters/n2t/naans mint 233
set mint = "nog -d ~/minters/n2t/naans mint 1"
#set ndcmd = "/noid/nd/noid mint 1"
#set ndcmd = "echo id: 00001/8999a"

set url = `echo $website | sed 's,//*$,,'`		# remove terminal '/'
set url = `echo $url | sed 's,^\([^h]\),http://\1,'`	# start with 'http://'

# XXXX add ability to 'hold' a user-supplied NAAN

set id = `$mint | sed 's,^id: ,,'`			# remove initial 'id: '
#set partial = `echo $id | sed 's,^00001/,,'`

# Criteria go here.
#if ("$partial" =~ 9* || "$partial" =~ 0*) then
#if ("$id" =~ 9* || "$id" =~ 0*) then
if ("$id" =~ [089]*) then
	#echo ECHO noid hold set $id
	#$ndcmd hold set $id
	echo "Skipping id: $id".  Try again.
	exit 1
endif

echo Got id = $id

set date = "`date +%Y.%m.%d`"
set year = "`date +%Y`"

if ("$first" == "")   set first = First
if ("$last" == "")    set last = Last
if ("$email" == "")   set email = Email
if ("$phone" == "")   set phone = Phone

echo "Append this line to the 'grandfathered' file:"
printf "${id}: %-9s $date   # $institution\n" $acro

echo "\
naa:\
who:	$institution (=) $acro\
what:	$id\
when:	$date\
where:	$url\
how:	NP | (:unkn) unknown | $year |\
\!why:	ARK\
\!contact: $last, $first ||| $email | $phone\
\
" > new_naa
cat new_naa >> recent_naas

echo "\
Hi XXX,\
\
Thanks for your message.  The NAAN,\
\
	$id\
\
has been registered for the $institution and you may begin\
using it immediately.\
\
In thinking about how to manage the namespace, you may find it helpful\
to consider the usual practice of partitioning it with reserved prefixes\
of, say 1-5 characters, eg, names of the form "'"'"ark:/$id/xt3...."'"'" for\
each "'"'"sub-publisher"'"'" in an organization.  Opaque prefixes that only have\
meaning to information professionals are often a good idea and have\
precedent in schemes such as ISBN and ISSN.\
\
The ARK specification linked from [1] is currently the best guide for how\
to create URLs that comply with ARK rules, although it is fairly technical.\
There is a public discussion group for ARKs (Archival Resource Keys) at\
\
         http://groups.google.com/group/arks-forum\
\
intended for people interested in sharing with and learning from others\
about how ARKs have been or could be used in identifier applications.\
There is also a service called EZID (http://n2t.net/ezid) that you may\
wish to use to manage your namespace, which includes minting and resolving\
ARKs, DOIs, and other identifiers, as well as maintaining metadata.\
Please contact joan.starr@ucop.edu if you are interested in EZID.\
\
There's nothing else you need to do right now.  As you may know, we're\
hoping to craft a small number of standardized statements for name\
assigning authority policy that organizations can use if they want to.\
\
-John\
\
[1] https://wiki.ucop.edu/display/Curation/ARK\
\
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\
John A. Kunze            jak@ucop.edu      California Digital Library\
415 20th St, #406       +1 510 987 9231     University of California\
Oakland, CA  94612     fax: 510 893 5212     Office of the President\
=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\
" > new_naa_response

echo "Response template being sent to $notify."

mail -s 'naan response' $notify < new_naa_response

echo "\
Modify contents of file 'new_naa' to insert into the master_naans registry.\
Modify 'new_naa_response' (emailed to $notify) to respond to the requester."

# % noid dbcreate .rddddd long 00001 n2t.info naan
# Created:   minter for 100000 random identifiers of form .rddddd
#        A Noid minting and binding database has been created that will bind
#        and mint 100,000 identifiers with the template ".rddddd".
#        Sample identifiers would be "00001/79953" and "00001/22939".
#        Minting order is random.  See ./NOID/README for details.

# % noid hold set `sed 's/:.*//' grandfathered`
# # test with
# % noid mint 100000

# -----
# Going forward, mint as usual but prepare to filter out unwanted NAANs.
# For example, if for a NANN starting with 0 or containing too many repeated
# digits, do
# 
# % noid mint 1
# id: 00001/01234
# 
# % noid hold set 00001/01234
# 
# % noid mint 1
# ...   <repeat as necessary>
# 
# Then record the assignment you choose back into "grandfathered" just in
# case we have to start over again.
