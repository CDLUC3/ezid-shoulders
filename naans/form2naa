#!/usr/bin/perl

use 5.006;
use strict;
use warnings;

use YAML;
use Encode;

# Author:  John A. Kunze, jak@ucop.edu, California Digital Library
# Copyright (c) 2016 UC Regents

my $cmd = $0;
$cmd =~ s,.*/,,;		# drop path part
my $usage_text = << 'EOT';
q|$cmd - convert a NAAN request form to a registry entry

Usage:	$cmd [ -n ] FormFile

where FormFile names a YAML-ish file containing a filled-out form, often
pasted from an email sent by https://goo.gl/forms/bmckLSPpbzpZ5dix1 .

The FormFile may be given as '-' to name stdin.  The optional -n argument
prevents generation of a new NAAN, but does show the rest of the entry as
it would look except for a new NAAN.  As an example, the received form

  Contact name:	Gautier Poupeau
  Contact email address:	gpoupeau@ina.fr
  Organization name:	Institut national de l'audiovisuel
  Position in organization:	Data architect
  Organization address:	4 avenue de l'Europe, 94366 Bry-sur-Marne Cedex
  Organization base URL:	http://www.ina.fr
  Organization status:	For profit
  Service provider:	Sam Smith, ss@aaa.example.org, Acme Archiving

with -n specified produces

  naa:
  who:    Institut national de l'audiovisuel (=) INA
  what:   XXXXX
  when:   2016.09.23
  where:  http://www.ina.fr
  how:    FP | (:unkn) unknown | 2016 |
  !why:   ARK
  !contact: Poupeau, Gautier ||| gpoupeau@ina.fr |
  !address: 4 avenue de l'Europe, 94366 Bry-sur-Marne Cedex
  !provider: Sam Smith, ss@aaa.example.org, Acme Archiving

EOT

# main
{
	my $no_naan_generation = 0;
	$#ARGV >= 0 and $ARGV[0] eq '-n' and
		$no_naan_generation = 1,
		shift;
	$#ARGV < 0 and
		print($usage_text),
		exit 0;
	$ARGV[0] eq '-' and
		shift;

	# Get parts of today's date
	my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime();
	$year += 1900;
	$mon = sprintf("%02d", $mon + 1);
	$mday = sprintf("%02d", $mday);

	local $/;		# set input mode to slurp whole file at once
	$_ = <>;		# slurp file from stdin or from named arg
	s/(:?)\t+/: /g;		# YAML needs : and forbids tab-for-space

	# Flag annoying non-ascii punctuation (eg, ' and -)
	my @uchars = split '', decode('utf8', $_);
	/\P{ascii}/ && /\p{Punctuation}/ && print(STDERR
		"warning: non-ascii punctuation: ", encode('utf8', $_), "\n")
			for (@uchars);

	my $h = Load($_);	# YAML parse, returning hash reference
	# yyy check if YAML strips surrounding whitespace

	# Get part of personal name (just a guess, so bears checking)
	my $fullname = $h->{'Contact name'} || '';
	my ($firstname, $lastname) = $fullname =~ /^\s*(.+)\s+(\S+)\s*$/ or
		print(STDERR "error: couldn't parse personal name '",
			$fullname, "'\n"),
		exit 1;
	# XXX form doesn't ask for Acronym (should it ever?)
	my $orgname = $h->{'Organization name'} || '';
	my $acronym = $h->{'Acronym'} || '';
	unless ($acronym) {
		$acronym = $orgname;
		# drop stop words in English, French, and Spanish
		$acronym =~ s/\b(?:the|and|of|l[ae']|et|d[eu']|des)\b//g;
		# stop possessive 's' from showing up in the acronym
		$acronym =~ s/\b's\b//g;
		$acronym =~ s/\b(.).*?\b/\U$1/g;	# first letter
		$acronym =~ s/\s+//g;			# remove spaces
		$acronym = uc $acronym;
	}
	my $phone = $h->{'Phone'} || '';
	my $bmodel = $h->{'Organization status'} || '';
	$bmodel = $bmodel =~ /For profit/
		? 'FP' : 'NP';

	my $URL = $h->{'Organization base URL'};
	$URL =~ s,/+\s*$,,;
	my $email = $h->{'Contact email address'};
	my $address = $h->{'Organization address'};
	my $provider = $h->{'Service provider'} || '';
	my $role = $h->{'Position in organization'} || '';
	$provider and
		$provider = "\n!provider: $provider";
	my $other = $h->{'Other information'} || '';
	$other and
		print STDERR "Note other info: $other\n";
	my $naan = 'XXXXX';
	unless ($no_naan_generation) {
		my $naan_rec = "$ENV{HOME}/shoulders/naans/forge/naan_rec ";
		my $cmd = qq@$naan_rec "$acronym" "$URL" "$orgname" "$firstname" "$lastname" "$email" "" "$address"@;
		$naan = `$cmd`;
		chop $naan;
		#$naan = forge/naan_rec Acronym Website InstitutionName First Last Email Phone Address
	}

	print "
naa:
who:    $orgname (=) $acronym
what:   $naan
xxx don't trust the FP/NP status in new_naa
when:   $year.$mon.$mday
where:  $URL
how:    $bmodel | (:unkn) unknown | $year |
!why:   ARK
!contact: $lastname, $firstname ($role) ||| $email |
!address: $address$provider

";

#  Your Name:	Gautier Poupeau
#  Contact email address:	gpoupeau@ina.fr
#  Organization name:	Institut national de l'audiovisuel
#  Position in organization:	Data architect
#  Organization address:	4 avenue de l'Europe, 94366 Bry-sur-Marne Cedex
#  Organization base URL:	http://www.ina.fr
#  Organization status:	For profit

#+how:   NP | (:unkn) unknown | 2016 |
#+!why:  EZID ARK-only
#+!contact: Flynn, Allen ||| ajflynn@med.umich.edu | +1 734-615-0839
#+!address: 300 North Ingalls Street, 11th Floor, Suite 1161

	exit 0;
}
